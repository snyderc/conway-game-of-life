General map of to-dos:
[DONE] Get clickable board
[DONE] Handle generations
[DONE] Present Generations count to user
[DONE] Expose Settings to user (Start, Pause, Clear, etc.)
[DONE] Allow generations to be advanced automatically instead of just manually
[DONE] Have randomly generated starting pattern & auto-play that pattern
[] Style the app
[] Figure out: When something goes off the board in one direction, should it wrap around?
--- I saw an implementation that included wrap around. However, such an implementation makes
    Gosper's gliding gun impossible because the gliders
    keep going and eventually interfere with the original gun.
    That leads me to believe the Game of Life should not look at wrapped around neighbors.
    

Future features:
[] Handle different board sizes (need to be able to update CSS from JS)

Items to revisit later:

Board.scss: Update the width so it conforms with the board width
when the board X and Y are changed to different sizes.
(Variables, function to do the multiplication, etc.)

BoardCell.scss: I used @extend so that each BoardCell button
only needed one class. Might want to experiment with allowing
each button to have multiple classes -- one that's fixed and one
that changes depending on whether the cell is alive or dead.

GameOfLifeApp.js: Refactor HandleClearBoard so it and the random pattern generator
use the same function with different parameters passed in